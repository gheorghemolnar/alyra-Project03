{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","utils/index.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Header/index.jsx","components/VotingResults/index.jsx","components/VotingNoAccess/index.jsx","components/VotingWorkflow/index.jsx","components/VotingInformations/index.jsx","components/Voting/NoticeNoArtifact.jsx","components/Voting/NoticeWrongNetwork.jsx","components/Voting/index.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","owner","status","voters","proposals","reducer","state","action","type","data","voter","proposal","Error","EMPTY_TOAST_MESSSAGE","message","isError","mappingFieldValidation","validate","address","RegExp","test","errorMessage","description","trim","id","proposalsNr","getParsedJsonContent","boundaries","begin","indexOf","end","stringObject","substring","JSON","parse","isJSON_RPC","EMPTY_FIELD_VALIDATION","value","isValid","resetFieldValue","step","formFields","isOwner","currentUser","mappingWorkflowStatusToSteps","getErrorMessage","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","initOwner","initStatus","initVoters","initProposals","networks","Contract","options","fromBlock","toBlock","Promise","all","methods","call","workflowStatus","getPastEvents","console","error","parseInt","useEffect","tryInit","require","err","events","handleChange","eventsSubscriptions","options1","subVoters","VoterRegistered","on","event","log","subProposals","ProposalRegistered","forEach","e","window","ethereum","removeListener","Object","entries","key","subsription","unsubscribe","Provider","useEth","useContext","Header","account","length","network","AdminPrefix","VotingResults","results","map","returnValues","VotingNoAccess","Card","className","as","Body","Text","WORKFLOW_STEPS","FORM_FIELDS","VotingSteps","eventKey","label","title","invite","placeholder","VotingWorkflow","setStep","useState","isLoading","setIsLoading","toastMessage","setToastMessage","validated","setValidated","setResults","show","setShow","setFormFields","bIsOwner","bIsRegisteredVoter","votersList","votersAddresses","i","voterAddress","includes","isRegisteredVoter","response","fetchData","winningProposalID","responseTmp","concat","resetToastMessage","msg","startProposalRegistering","startProposalsRegistering","send","from","startVotingSession","endProposalsRegistering","tallyVotes","endVotingSession","addVoter","addProposal","setVote","mappingWorkflow","stepWkf","actSave","actMsg","stepMsg","handleWorkflowStepSelect","nextStep","errMessage","setTimeout","handleSubmit","preventDefault","stopPropagation","currentTarget","checkValidity","newData","actionType","Nav","variant","activeKey","onSelect","Item","Link","disabled","Form","noValidate","onSubmit","InputGroup","hasValidation","Control","onChange","oldFormValues","newValue","target","newFormValues","required","isInvalid","spellCheck","Feedback","Button","size","Spinner","animation","role","ToastContainer","position","Toast","onClose","bg","VotingInformations","getActiveTab","tab","setTab","votersContent","proposalsContent","proposalId","Tab","Container","Row","Col","sm","Content","Pane","NoticeNoArtifact","NoticeWrongNetwork","Voting","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7c21f6f6.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n  voterAdded: \"VOTER_ADDED\",\n  proposalAdded: \"PROPOSAL_ADDED\"\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null,\n  owner: null,\n  status: 0,\n  voters: [],\n  proposals: []\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    case actions.voterAdded:\n      return {\n        ...state,\n        voters: [...state.voters, data.voter]\n      };\n    case actions.proposalAdded:\n      return {\n        ...state,\n        proposals: [...state.proposals, data.proposal]\n      };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","// Max nunmber of Proposals that can be added !\nexport const MAX_NUMBER_OF_PROPOSALS   = 100;\n\n// Used to empty the toast message\nexport const EMPTY_TOAST_MESSSAGE      = { message: '', isError: false };\n\n/* Form Fields Validations */\nconst validateEthAddress = (address) => {\n    const REGEX_ETHEREUM_ADDRESS = new RegExp(/^0x[a-fA-F0-9]{40}$/,'gi');\n    return REGEX_ETHEREUM_ADDRESS.test(address);\n};\nconst validateDescription = (description) => {\n    return description.trim() !== '';\n};\nconst validateId = (id, proposalsNr) => {\n    const REGEX_NUMBER = new RegExp(/^\\d{1,3}$/,'g');\n    return REGEX_NUMBER.test(id) && (id < proposalsNr);\n};\n\nexport const mappingFieldValidation = {\n    \"0\": { \n        validate: validateEthAddress, \n        errorMessage: 'Please enter a valid address (ex. 0x0Fc26AD404Ade2e68ba50EDc0f9fC6cC6a87aBE6)'\n    },\n    \"1\": {\n        validate: validateDescription,\n        errorMessage: 'Please enter a valid description'\n    },\n    \"2\": {\n        validate: validateId,\n        errorMessage: 'Please enter an existant proposition id'\n    }\n};\n\n\nfunction getParsedJsonContent(message = \"\") {\n    const boundaries = ['{','}'];\n    const begin = message.indexOf(boundaries[0]);\n    const end = message.indexOf(boundaries[1]);\n    const stringObject = message.substring(begin, end+1);\n\n    return JSON.parse(stringObject);\n}\n\nfunction isJSON_RPC(message = \"\") {\n    return message.indexOf(\"JSON-RPC\") !== -1;\n}\n\n\nexport const EMPTY_FIELD_VALIDATION = { value: '', isValid: null, errorMessage: '' };\n\nexport const resetFieldValue = (step, formFields) => {\n    return {\n        ...formFields,\n        [`${step}`]: {\n            value: '',\n            isValid: null,\n            // isTouched: false\n        }\n    }\n};\n\n// Is App Owner\nexport const isOwner = (currentUser, owner) => currentUser === owner;\n\n// Is registered Voter\nexport const isRegisteredVoter = (currentUser, votersList = []) => {\n    const votersAddresses = votersList.length > 0 ? votersList.map(({returnValues}, i) => returnValues.voterAddress) : [];\n\n    return votersAddresses.includes(currentUser);\n}\n\n// Mapping between Workflow Steps and the App Steps\nexport const mappingWorkflowStatusToSteps = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 2,\n    4: 3,\n    5: 3,\n};\n\nexport function getErrorMessage(message = \"\") {\n    if(isJSON_RPC(message)) {\n        return getParsedJsonContent(message).message;\n    }\n\n    return message;\n}\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport { mappingWorkflowStatusToSteps } from '../../utils';\n\nfunction EthProvider({ children }) {\n  const [ state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        let initOwner = false, initStatus = 0, initVoters = [], initProposals = [];\n\n        try {\n          if (artifact.networks[networkID]) {\n            address = artifact.networks[networkID].address;\n            contract = new web3.eth.Contract(abi, address);\n\n            // On recup tous les events passés du contrat\n            if(contract) {\n              const options = { fromBlock: 0, toBlock: 'latest' };\n\n              [initOwner, initStatus, initVoters, initProposals] = await Promise.all([\n                contract.methods.owner().call(),\n                contract.methods.workflowStatus().call(),\n                contract.getPastEvents('VoterRegistered', options),\n                contract.getPastEvents('ProposalRegistered', options)\n              ]);\n            }\n          }\n        } catch (err) {\n          console.error(\"EthProvider\", err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract, owner: initOwner, status: mappingWorkflowStatusToSteps[parseInt(initStatus, 10)], voters: [...initVoters], proposals: [...initProposals] }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    const eventsSubscriptions = {};\n    const options1 = {fromBlock: 'latest'};\n\n    if(state.contract) {\n      const subVoters = state.contract.events.VoterRegistered(options1)\n      .on('connected', event => {\n        console.log(\"Voters subscription connected\", event);\n      })\n      .on('data', event => {\n        dispatch({\n          type: actions.voterAdded,\n          data: {\n            voter: event\n          }\n        })\n      });\n      // add subscription for Voters\n      eventsSubscriptions['voters'] = subVoters;\n\n      const subProposals = state.contract.events.ProposalRegistered(options1)\n      .on('connected', event => {\n        console.log(\"Proposals subscription connected\", event);\n      })\n      .on('data', event => {\n        dispatch({\n          type: actions.proposalAdded,\n          data: {\n            proposal: event\n          }\n        })\n      });\n      // add subscription for Proposals\n      eventsSubscriptions['proposals'] = subProposals;\n\n    }\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n      Object.entries(eventsSubscriptions).forEach(([key, subsription]) => {\n        console.log(\"Unsubscribe for \", key);\n        subsription.unsubscribe();\n      })\n    };\n  }, [init, state.artifact, state.contract]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import useEth from \"../../contexts/EthContext/useEth\";\n\nimport { isOwner } from '../../utils';\n\nconst EMPTY = '--';\n\nexport default function Header() {\n    const {state: { owner, accounts, networkID }} = useEth();\n    const account = accounts && accounts.length > 0 ? accounts[0] : EMPTY;\n    const network = networkID ? networkID : EMPTY;\n    const AdminPrefix = isOwner(account, owner) ? 'Welcome ADMIN !' : '';\n\n    return <div>{AdminPrefix} Account: {account} / Network: {network}</div>;\n\n}","import useEth from \"../../contexts/EthContext/useEth\";\n\nconst VotingResults = ({results = []}) => {\n    const { state: { proposals}} = useEth();\n\n    return <div><h3>Winning proposal(s):</h3> {\n        results.length > 0 && proposals.length > 0?\n        results.map(id=> <div key={id}>{`${id}`} - {`${proposals[id].returnValues.description}`}</div>)\n        : \"No results available !\"\n    }</div>;\n};\n\nexport default VotingResults;","import { Card } from \"react-bootstrap\";\n\nconst VotingNoAccess = () => <Card className=\"text-center\">\n    <Card.Header as=\"h5\">Access restricted</Card.Header>\n    <Card.Body>\n        <Card.Text>This functionality is available only to registered voters</Card.Text>\n    </Card.Body>\n    </Card>;\n\nexport default VotingNoAccess;","import React,{ useEffect, useState } from 'react';\nimport { Button, Card, Form, InputGroup, Nav, Spinner, Toast, ToastContainer } from \"react-bootstrap\";\n\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport { isOwner, isRegisteredVoter, resetFieldValue, getErrorMessage, mappingFieldValidation, EMPTY_FIELD_VALIDATION, MAX_NUMBER_OF_PROPOSALS, EMPTY_TOAST_MESSSAGE } from \"../../utils\";\nimport VotingResults from '../VotingResults';\nimport VotingNoAccess from '../VotingNoAccess';\n\n// Workllfw Steps\nconst WORKFLOW_STEPS = {\n    VOTERS_REGISTRATION:        0,\n    PROPOSALS_REGISTRATION:     1,\n    VOTING_SESSION:             2,\n    VOTES_TALLY:                3\n};\n\n// Structure for form fields used to manage the fields values and their  validations\nconst FORM_FIELDS = {\n    \"0\": { ...EMPTY_FIELD_VALIDATION },\n    \"1\": { ...EMPTY_FIELD_VALIDATION },\n    \"2\": { ...EMPTY_FIELD_VALIDATION }\n};\n\n// Structure used for the voting process\nconst VotingSteps = [\n    { eventKey:   WORKFLOW_STEPS.VOTERS_REGISTRATION,     label: \"Registering voters\",     title: \"Voter registration\",     invite: \"Add a new voter\",      placeholder:\"User address\"},\n    { eventKey:   WORKFLOW_STEPS.PROPOSALS_REGISTRATION,  label: \"Registering proposals\",  title: \"Proposal registration\",  invite: \"Add a new proposal\",   placeholder:\"Proposal description\"},\n    { eventKey:   WORKFLOW_STEPS.VOTING_SESSION,          label: \"Voting session\",         title: \"Proposal voting\",        invite: \"Vote a proposal\",      placeholder:\"Enter a proposal id\"},\n    { eventKey:   WORKFLOW_STEPS.VOTES_TALLY,             label: \"Tally votes\",            title: \"Votes tallying\",         invite: \"The results\",          placeholder:\"\"},\n];\n\nconst VotingWorkflow = ({step, setStep}) => {\n    const { state: { accounts, contract, owner, voters, proposals}} = useEth();\n    const [isLoading, setIsLoading] = useState(false);\n    const [toastMessage, setToastMessage] = useState({...EMPTY_TOAST_MESSSAGE });\n    const [validated, setValidated] = useState(false);\n    const [results, setResults] = useState([]);\n    const [show, setShow] = useState(false);\n\n    const [formFields, setFormFields] = useState({ ...FORM_FIELDS });\n\n    const bIsOwner = isOwner(accounts[0], owner);\n    const bIsRegisteredVoter = isRegisteredVoter(accounts[0], voters);\n\n    /**\n     * Hooks\n     */\n    useEffect(() => {\n        setFormFields({ ...FORM_FIELDS });\n    }, [contract]);\n\n    useEffect(() => {\n        let response = [];\n        const fetchData = async() => {\n            const responseTmp = await contract.methods.winningProposalID().call();\n            response = response.concat(responseTmp);\n            setResults(response);\n        }\n        if(step === VotingSteps.length-1) {\n            fetchData();\n        }\n    }, [contract, step]);\n\n    const resetToastMessage = (msg = EMPTY_TOAST_MESSSAGE) => setToastMessage({ ...msg });\n\n    /**\n     * Workflow functions - Start\n     */\n    const startProposalRegistering = async() => await contract.methods.startProposalsRegistering().send({ from: accounts[0] });\n\n    const startVotingSession = async() => {\n        await Promise.all([\n            contract.methods.endProposalsRegistering().send({ from: accounts[0] }),\n            contract.methods.startVotingSession().send({ from: accounts[0] })\n        ]);\n    }\n    const tallyVotes = async() => {\n        await contract.methods.endVotingSession().send({ from: accounts[0] });\n        await contract.methods.tallyVotes().send({ from: accounts[0] });\n    };\n\n    const addVoter = async (voter) => await contract.methods.addVoter(voter).send({ from: accounts[0] });\n\n    const addProposal = async (description) => {\n        if (proposals.length < MAX_NUMBER_OF_PROPOSALS) {\n            await contract.methods.addProposal(description).send({ from: accounts[0] });\n        }else {\n            throw new Error(\"Maximum number of proposals has been reached !\");\n        }\n    };\n\n    const setVote = async (id) => await contract.methods.setVote(id).send({ from: accounts[0] });\n\n    /**\n     * Workflow functions - End\n     */\n\n    // Mappings of functions for handling submit and workflow status change, with appropiated messages\n    const mappingWorkflow = {\n        0: {stepWkf: null, actSave: addVoter, actMsg: 'New voter added', stepMsg: '' },\n        1: {stepWkf: startProposalRegistering, actSave: addProposal, actMsg: 'New proposal added', stepMsg: 'Proposals registration'},\n        2: {stepWkf: startVotingSession, actSave: setVote, actMsg: 'Vote accounted', stepMsg: 'Voting proposals'},\n        3: {stepWkf: tallyVotes, actSave: null, actMsg: '', stepMsg: 'Voting have been tallied !'}\n    };\n\n    // handling workflow status change\n    const handleWorkflowStepSelect = async(eventKey) => {\n        const nextStep = parseInt(eventKey, 10);\n\n        if(nextStep > step && !isLoading && mappingWorkflow[nextStep].stepWkf){\n            try {\n                resetToastMessage();\n                setShow(false);\n                setIsLoading(true);\n                await mappingWorkflow[nextStep].stepWkf();\n                setStep(nextStep);\n\n                const toastMessage = mappingWorkflow[nextStep].stepMsg\n                if(toastMessage !== ''){\n                    setToastMessage({ message: toastMessage});\n                    setShow(true);\n                }\n                setValidated(false);                    \n            } catch (err) {\n                const errMessage = getErrorMessage(err.message);\n                setToastMessage({message: errMessage, isError: true});\n                setShow(true);    \n            }\n            setTimeout(() => setIsLoading(false), 2000);\n        }else {\n            setToastMessage({message: \"You can't go back !\", isError: true});\n            setShow(true);\n        }\n    };\n\n    // handling field value change\n    const handleChange = (event) => {\n        const oldFormValues = formFields;\n        const newValue = event.target.value;\n        const isValid = (step === WORKFLOW_STEPS.VOTING_SESSION) ? mappingFieldValidation[`${step}`].validate(newValue, proposals.length) : mappingFieldValidation[`${step}`].validate(newValue);\n\n        const newFormValues = {\n            ...oldFormValues,\n            [`${step}`]: {\n                ...EMPTY_FIELD_VALIDATION,\n                value: newValue,\n                isValid: isValid,\n                errorMessage: isValid ? '' : mappingFieldValidation[`${step}`].errorMessage\n            }\n        };\n        setFormFields(newFormValues);\n    };\n\n    // handling form submit\n    const handleSubmit = async(event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n            setValidated(true);\n        } else {\n            resetToastMessage();\n            try {\n                const newData = formFields[`${step}`].value.trim();\n                setShow(false);\n                setIsLoading(true);\n\n                if(mappingWorkflow[step].actSave) {\n                    await mappingWorkflow[step].actSave(newData);\n                    setFormFields(resetFieldValue(step, formFields));\n                    setValidated(false);\n                    setToastMessage({message: \"Success\", isError: false, actionType: mappingWorkflow[step].actMsg});\n                    setShow(true);\n                }\n            } catch (err) {\n                const errMessage = getErrorMessage(err.message);\n\n                setToastMessage({message: errMessage, isError: true});\n                setShow(true);\n            }finally{\n                setIsLoading(false);\n            }\n        }\n    };\n\n    return (\n        <div className=\"voting\">\n            <div className=\"voting-header\">\n                <div className=\"steps\">\n                    <Nav variant=\"pills\" activeKey={step} onSelect={handleWorkflowStepSelect}>\n                        {\n                            VotingSteps.map(step => <Nav.Item key={step.eventKey}>\n                                <Nav.Link eventKey={step.eventKey} disabled={!bIsOwner}>{step.label}</Nav.Link>\n                            </Nav.Item>\n                        )}\n                    </Nav>\n                </div>\n            </div>\n\n            <div className=\"voting-body\">\n            { ((bIsOwner && step < VotingSteps.length - 1) || ((bIsRegisteredVoter && step >= 1 && step < VotingSteps.length - 1)))\n                ?\n                    <Card className=\"text-center\">\n                        <Card.Header as=\"h5\">{VotingSteps[step].title}</Card.Header>\n                        <Card.Body>\n                            <Card.Text>{VotingSteps[step].invite}</Card.Text>\n                                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                                    <InputGroup hasValidation>\n                                        <Form.Control onChange={handleChange} type=\"text\" required\n                                            placeholder={VotingSteps[step].placeholder} \n                                            value={formFields[`${step}`].value}\n                                            disabled={isLoading} \n                                            isValid={formFields[`${step}`].isValid}\n                                            isInvalid={formFields[`${step}`].isValid != null ? !formFields[`${step}`].isValid : false}\n                                            spellCheck=\"false\" \n                                            />\n                                        <Form.Control.Feedback type=\"invalid\">{formFields[`${step}`].errorMessage}</Form.Control.Feedback>\n                                    </InputGroup>\n                                    <div className=\"cta\">\n                                        <div className=\"btns\">\n                                            <div className=\"d-grid gap-2\">\n                                                <Button variant=\"primary\" size=\"lg\" type=\"submit\">\n                                                    {isLoading ?\n                                                    <Spinner animation=\"border\" role=\"status\" variant=\"warning\">\n                                                        <span className=\"visually-hidden\">Loading...</span>\n                                                    </Spinner>\n                                                    :\n                                                    \"Add\"\n                                                }\n                                                </Button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Form>                           \n                        </Card.Body>\n                    </Card>\n                :  (step === VotingSteps.length - 1) ? <VotingResults results={results}/> : <VotingNoAccess />\n            }\n            </div>\n\n            <ToastContainer position=\"bottom-center\" className=\"p-3\">\n                <Toast onClose={() => setShow(false)} show={show} bg={toastMessage.isError?'danger' : 'info'}>\n                    <Toast.Header>\n                        <strong className=\"me-auto\">{toastMessage.isError ? \"Error occured\": toastMessage.actionType}</strong>\n                    </Toast.Header>\n                    <Toast.Body className={toastMessage.isError?'danger' : 'info'}>{toastMessage.message}</Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\n\nexport default VotingWorkflow;","import React, {useEffect, useState} from 'react';\nimport { Tab, Nav, Row, Col } from \"react-bootstrap\";\n\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction VotingInformations({step}){\n    const getActiveTab = (step) => step === 0 ? 1 : 2;\n    const { state: { voters, proposals }} = useEth();\n    const [tab, setTab] = useState(getActiveTab(step));\n\n    useEffect(() => {\n      setTab(getActiveTab(step));\n  }, [step]);\n\n    const handleSelect = (eventKey) => {\n        if(eventKey !== tab){\n            setTab(eventKey);\n        }\n    };\n    const votersContent = voters.length ?\n        <div className=\"details-list-voters\">\n          <h3>Voters list: ({voters.length})</h3>\n          <div className=\"listing\">\n            {voters.map(({returnValues}, i) => <div className=\"item\" key={returnValues.voterAddress}>{returnValues.voterAddress}</div>)}\n          </div>\n        </div>\n        : \"No voters yet\";\n    const proposalsContent = proposals.length ?\n        <div className=\"details-list-proposals\">\n          <h3>Proposals list: ({proposals.length})</h3>\n          <div className=\"listing\">\n            {proposals.map(({returnValues}) => <div className=\"item\" key={returnValues.proposalId}>{returnValues.proposalId} - {returnValues.description}</div>)}\n          </div>\n        </div>\n        : \"No proposal yet\";\n\n    return <div className=\"voting-informations\">\n      <Tab.Container id=\"VotingInformations\" activeKey={tab} onSelect={handleSelect}>\n        <Row>\n          <Col sm={3}>\n            <Nav variant=\"pills\" className=\"flex-column\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"1\">Voters list</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"2\">Proposals list</Nav.Link>\n              </Nav.Item>\n            </Nav>\n          </Col>\n          <Col sm={9}>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"1\">\n                {votersContent}\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"2\">\n                {proposalsContent}\n              </Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n    </div>;\n}\n\nexport default VotingInformations;","function NoticeNoArtifact() {\n  return (\n    <p>\n      ⚠️ Cannot find <span className=\"code\">Voting</span> contract artifact.\n    </p>\n  );\n}\n\nexport default NoticeNoArtifact;\n","function NoticeWrongNetwork() {\n  return (\n    <p>\n      ⚠️ MetaMask is not connected to the same network as the one you deployed to.\n    </p>\n  );\n}\n\nexport default NoticeWrongNetwork;\n","import React,{ useEffect, useState } from 'react';\n\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nimport VotingWorkflow from '../VotingWorkflow';\nimport VotingInformations from '../VotingInformations';\n\nimport NoticeNoArtifact from \"./NoticeNoArtifact\";\nimport NoticeWrongNetwork from \"./NoticeWrongNetwork\";\n\n\nfunction Voting() {\n  const { state: {artifact, contract, status}} = useEth();\n  const [step, setStep] = useState(0);\n  useEffect(() => {\n    setStep(status);\n}, [status]);\n\n  return (\n    <div className=\"contract-container\">\n      {\n        !artifact ? <NoticeNoArtifact /> :\n          !contract ? <NoticeWrongNetwork /> :\n          <>\n            <VotingWorkflow step={step} setStep={setStep} />\n            <VotingInformations step={step} />\n          </>\n      }\n    </div>\n  );\n}\n\nexport default Voting;\n","import { EthProvider } from \"./contexts/EthContext\";\nimport Header from \"./components/Header\";\nimport Voting from \"./components/Voting\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <EthProvider>\n      <div id=\"App\">\n        <div className=\"header\">\n          <Header />\n        </div>\n        <div className=\"container\">\n          <div className=\"welcome\"><h1>Welcome to the WEB3 voting application</h1></div>\n          <Voting />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport './scss//custom.scss';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}